{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zeesh\\\\OneDrive\\\\Desktop\\\\Final yr project\\\\Frontend\\\\myapp\\\\src\\\\Components\\\\Mainhome.jsx\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainHome() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-t bg-gray-700 to-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-slate-900 text-white h-64 w-40 p-4 overflow-y-scroll\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [\"DocuLingua: An NLP-Powered Assistant for Summarizing and Translating\\xA0Documents\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 9\n          }, this), \"Developed a full-stack web application that performs real-time document summarization using the BERT (BART variant) model and language translation using the Helsinki-NLP model. The backend was implemented with Flask for handling NLP processing and Node.js with Express for user authentication and registration, integrated with MongoDB for data storage. The frontend was built using React.js, styled with Tailwind CSS, and enhanced with JavaScript for dynamic UI interactions. The tool supports both PDF and text inputs and delivers a seamless, scalable user experience for summarizing and translating documents efficiently.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-400 text-black rounded-lg px-4 py-2\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-400 text-black rounded-lg px-4 py-2\",\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = MainHome;\nexport default MainHome;\nvar _c;\n$RefreshReg$(_c, \"MainHome\");","map":{"version":3,"names":["Link","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","MainHome","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/zeesh/OneDrive/Desktop/Final yr project/Frontend/myapp/src/Components/Mainhome.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nfunction MainHome() {\r\n    return(\r\n        <>\r\n         <Header />\r\n      <div className=\"bg-gradient-to-t bg-gray-700 to-black\">\r\n        <div className=\"bg-slate-900 text-white h-64 w-40 p-4 overflow-y-scroll\">\r\n            <p className=\"text-sm\">\r\n        DocuLingua: An NLP-Powered Assistant for Summarizing and TranslatingÂ Documents\r\n        <br />\r\n        Developed a full-stack web application that performs real-time document summarization using the BERT (BART variant) model and language translation using the Helsinki-NLP model. The backend was implemented with Flask for handling NLP processing and Node.js with Express for user authentication and registration, integrated with MongoDB for data storage. The frontend was built using React.js, styled with Tailwind CSS, and enhanced with JavaScript for dynamic UI interactions. The tool supports both PDF and text inputs and delivers a seamless, scalable user experience for summarizing and translating documents efficiently.\r\n    </p>\r\n    <div className=\"flex justify-between mt-4\">\r\n        <button className=\"bg-blue-400 text-black rounded-lg px-4 py-2\">Start</button>\r\n        <button className=\"bg-blue-400 text-black rounded-lg px-4 py-2\">Details</button>\r\n    </div>\r\n        </div>\r\n      </div>\r\n        </>\r\n    )\r\n}\r\nexport default MainHome;"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC9B,SAASC,QAAQA,CAAA,EAAG;EAChB,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACCJ,OAAA,CAACF,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbR,OAAA;MAAKS,SAAS,EAAC,uCAAuC;MAAAL,QAAA,eACpDJ,OAAA;QAAKS,SAAS,EAAC,yDAAyD;QAAAL,QAAA,gBACpEJ,OAAA;UAAGS,SAAS,EAAC,SAAS;UAAAL,QAAA,GAAC,mFAE3B,eAAAJ,OAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,mnBAEV;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJR,OAAA;UAAKS,SAAS,EAAC,2BAA2B;UAAAL,QAAA,gBACtCJ,OAAA;YAAQS,SAAS,EAAC,6CAA6C;YAAAL,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9ER,OAAA;YAAQS,SAAS,EAAC,6CAA6C;YAAAL,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACF,CAAC;AAEX;AAACE,EAAA,GAnBQP,QAAQ;AAoBjB,eAAeA,QAAQ;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}